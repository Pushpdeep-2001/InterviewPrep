Leetcode :https://leetcode.com/problems/group-anagrams/

class Solution {
public:

//time complexity is O(n.klogk) where k is length of longest string.
    vector<vector<string>> groupAnagrams(vector<string>& strs) 
    {
        vector<vector<string>> res;

        int n=strs.size();
        unordered_map<string,vector<int>> mp;

        for(int i=0;i<n;i++)
        {
            string s=strs[i];
            sort(s.begin(),s.end());
            mp[s].push_back(i);
        }

        for(auto p:mp)
        {
            vector<int> v=p.second;
            vector<string> res1;
            for(int x:v)
            {
                res1.push_back(strs[x]);
            }

            res.push_back(res1);

        }

        return res;
    }
};
